allprojects {
    repositories {
        jcenter()
    }
}

ext {
    //Android
    androidBuildToolsVersion = "27.0.3"
    androidAnnotationsVersion = "27.1.0"

    supportLibraryVersion = '27.1.0'
    constraintLayoutVersion = '1.0.2'


    androidMinSdkVersion = 15
    androidTargetSdkVersion = 26
    androidCompileSdkVersion = 27

    //Libraries
    kotlinVersion = '1.2.51'
    butterKnifeVersion = '7.0.1'
    rxJavaVersion = '2.1.3'
    rxKotlinVersion = '2.1.0'
    rxAndroidVersion = '2.0.1'
    rxRelayVersion = '2.0.0'
    javaxAnnotationVersion = '1.0'
    javaxInjectVersion = '1'
    gsonVersion = '2.8.1'
    okHttpVersion = '3.8.1'
    swaggerAnnotationsVersion = '1.5.0'
    oltuVersion = '1.0.1'
    jodaTimeVersion = '2.9.9'
    retrofitJodaTimeSerializerVersion = '1.6.0'
    androidJodaTimeVersion = '2.9.9.2'
    retrofitVersion = '2.3.0'
    roomVersion = '1.0.0-alpha6'
    timberVersion = '4.5.1'
    glideVersion = '4.6.1'
    daggerVersion = '2.11'
    glassfishAnnotationVersion = '10.0-b28'
    kotlinLoggingVersion = '1.5.3'
    slf4jAndroidVersion = '1.7.25'
    greenEventBusVersion = '3.0.0'
    easyFlowVersion = '1.3.1'
    anko_version = '0.10.5'
    firebaseCoreVersion = '16.0.1'
    firebaseDatabaseVersion = '16.0.1'
    firebaseMessagingVersion = '17.1.0'

    //Testing
    robolectricVersion = '3.4.2'
    jUnitVersion = '4.12'
    assertJVersion = '3.8.0'
    mockitoVersion = '1.9.5'
    dexmakerVersion = '1.0'
    espressoVersion = '3.0.1'
    testingSupportLibVersion = '0.1'
    mockitoKotlinVersion = '1.5.0'
    mockitoAndroidVersion = '2.8.47'
    androidSupportRunnerVersion = '1.0.1'
    androidSupportRulesVersion = '1.0.1'
    dexmakerMockitoversion = '2.2.0'
    meanBeanVersion = '2.0.3'
    logbackVersion = '1.2.3'

    domainDependencies = [
            javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject    : "javax.inject:javax.inject:${javaxInjectVersion}",
            rxKotlin       : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin         : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}",
            jodaTime       : "joda-time:joda-time:${jodaTimeVersion}",
            easyFlow       : "au.com.datasymphony:EasyFlow:${easyFlowVersion}"

    ]

    domainTestDependencies = [
            junit   : "junit:junit:${jUnitVersion}",
            mockito : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            assertj : "org.assertj:assertj-core:${assertJVersion}",
            meanBean: "org.meanbean:meanbean:${meanBeanVersion}",
            logback : "ch.qos.logback:logback-classic:${logbackVersion}"

    ]

    presentationDependencies = [
            daggerCompiler    : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger            : "com.google.dagger:dagger:${daggerVersion}",
            okHttp            : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger      : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            gson              : "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin          : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}",
            kotlinLogging     : "io.github.microutils:kotlin-logging:${kotlinLoggingVersion}",
            rxAndroid         : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            javaxAnnotation   : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject       : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            retrofit          : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverter : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitAdapter   : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
            jodaTime          : "joda-time:joda-time:${jodaTimeVersion}"
    ]

    presentationTestDependencies = [
            junit      : "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj    : "org.assertj:assertj-core:${assertJVersion}",
            mockito    : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric: "org.robolectric:robolectric:${robolectricVersion}"
    ]

    dataDependencies = [
            swaggerAnnotations: "io.swagger:swagger-annotations:${swaggerAnnotationsVersion}",
            daggerCompiler    : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger            : "com.google.dagger:dagger:${daggerVersion}",
            okHttp            : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger      : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            gson              : "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin          : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}",
            rxAndroid         : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            rxRelay           : "com.jakewharton.rxrelay2:rxrelay:${rxRelayVersion}",
            javaxAnnotation   : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject       : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            retrofit          : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverter : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitAdapter   : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
            jodaTime          : "joda-time:joda-time:${jodaTimeVersion}"
    ]

    dataTestDependencies = [
            junit      : "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj    : "org.assertj:assertj-core:${assertJVersion}",
            mockito    : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric: "org.robolectric:robolectric:${robolectricVersion}"
    ]

    cacheDependencies = [
            daggerCompiler    : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger            : "com.google.dagger:dagger:${daggerVersion}",
            gson              : "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin          : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}",
            kotlinLogging     : "io.github.microutils:kotlin-logging:${kotlinLoggingVersion}",
            javaxAnnotation   : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject       : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            roomRuntime       : "android.arch.persistence.room:runtime:${roomVersion}",
            roomCompiler      : "android.arch.persistence.room:compiler:${roomVersion}",
            roomRxJava        : "android.arch.persistence.room:rxjava2:${roomVersion}",
            jodaTime          : "joda-time:joda-time:${jodaTimeVersion}"
    ]

    cacheTestDependencies = [
            junit        : "junit:junit:${jUnitVersion}",
            kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj      : "org.assertj:assertj-core:${assertJVersion}",
            mockito      : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric  : "org.robolectric:robolectric:${robolectricVersion}",
            roomTesting  : "android.arch.persistence.room:testing:${roomVersion}",
            archTesting  : "android.arch.core:core-testing:${roomVersion}",
            supportRunner: "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules : "com.android.support.test:rules:${androidSupportRulesVersion}"
    ]

    networkingDependencies = [
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            daggerCompiler    : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger            : "com.google.dagger:dagger:${daggerVersion}",
            gson              : "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin          : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            rxRelay           : "com.jakewharton.rxrelay2:rxrelay:${rxRelayVersion}",
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}",
            kotlinLogging     : "io.github.microutils:kotlin-logging:${kotlinLoggingVersion}",
            javaxAnnotation   : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject       : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            roomRuntime       : "android.arch.persistence.room:runtime:${roomVersion}",
            roomCompiler      : "android.arch.persistence.room:compiler:${roomVersion}",
            roomRxJava        : "android.arch.persistence.room:rxjava2:${roomVersion}",
            jodaTime          : "joda-time:joda-time:${jodaTimeVersion}"
    ]

    networkingTestDependencies = [
            junit        : "junit:junit:${jUnitVersion}",
            kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj      : "org.assertj:assertj-core:${assertJVersion}",
            mockito      : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric  : "org.robolectric:robolectric:${robolectricVersion}",
            roomTesting  : "android.arch.persistence.room:testing:${roomVersion}",
            archTesting  : "android.arch.core:core-testing:${roomVersion}",
            supportRunner: "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules : "com.android.support.test:rules:${androidSupportRulesVersion}"
    ]


    remoteDependencies = [
            daggerCompiler    : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger            : "com.google.dagger:dagger:${daggerVersion}",
            gson              : "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin          : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}",
            javaxAnnotation   : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject       : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            okHttp            : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            retrofit          : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            jodaTime          : "joda-time:joda-time:${jodaTimeVersion}"

    ]

    remoteTestDependencies = [
            junit        : "junit:junit:${jUnitVersion}",
            kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj      : "org.assertj:assertj-core:${assertJVersion}",
            mockito      : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            supportRunner: "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules : "com.android.support.test:rules:${androidSupportRulesVersion}"
    ]

    mobileUiDependencies = [
            daggerCompiler     : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger             : "com.google.dagger:dagger:${daggerVersion}",
            rxKotlin           : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            rxAndroid          : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            glide              : "com.github.bumptech.glide:glide:${glideVersion}",
            glideOktthp        : "com.github.bumptech.glide:okhttp3-integration:${glideVersion}",
            glideAnnotation    : "com.github.bumptech.glide:compiler:${glideVersion}",
            kotlinLogging      : "io.github.microutils:kotlin-logging:${kotlinLoggingVersion}",
            slf4jAndroid       : "org.slf4j:slf4j-android:${slf4jAndroidVersion}",
            kotlin             : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}",
            javaxAnnotation    : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject        : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations : "com.android.support:support-annotations:${supportLibraryVersion}",
            androidSupportV4   : "com.android.support:support-v4:${supportLibraryVersion}",
            androidSupportV13  : "com.android.support:support-v13:${supportLibraryVersion}",
            appCompatV7        : "com.android.support:appcompat-v7:${supportLibraryVersion}",
            appCardViewV7      : "com.android.support:cardview-v7:${supportLibraryVersion}",
            supportRecyclerView: "com.android.support:recyclerview-v7:${supportLibraryVersion}",
            constrantLayout    : "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}",

            supportDesign      : "com.android.support:design:${supportLibraryVersion}",
            timber             : "com.jakewharton.timber:timber:${timberVersion}",
            daggerSupport      : "com.google.dagger:dagger-android-support:${daggerVersion}",
            daggerProcessor    : "com.google.dagger:dagger-android-processor:${daggerVersion}",
            glassfishAnnotation: "org.glassfish:javax.annotation:${glassfishAnnotationVersion}",
            retrofit           : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitScalars    : "com.squareup.retrofit2:converter-scalars:${retrofitVersion}",
            retrofitConverter  : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitAdapter    : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
            jodaTime           : "joda-time:joda-time:${jodaTimeVersion}",
            jodaTimeRetrofit   : "com.fatboyindustrial.gson-jodatime-serialisers:gson-jodatime-serialisers:${retrofitJodaTimeSerializerVersion}",
            okHttpLogger       : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            ankoSdk            : "org.jetbrains.anko:anko-sdk25:${anko_version}",
            ankoAppCompat      : "org.jetbrains.anko:anko-appcompat-v7:${anko_version}",
            firebaseCore       : "com.google.firebase:firebase-core:$firebaseCoreVersion",
            firebaseMessaging  : "com.google.firebase:firebase-messaging:$firebaseMessagingVersion"


    ]

    mobileUiTestDependencies = [
            junit          : "junit:junit:${jUnitVersion}",
            kotlinJUnit    : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj        : "org.assertj:assertj-core:${assertJVersion}",
            mockito        : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            supportRunner  : "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules   : "com.android.support.test:rules:${androidSupportRulesVersion}",
            mockitoAndroid : "org.mockito:mockito-android:${mockitoAndroidVersion}",
            espressoCore   : "com.android.support.test.espresso:espresso-core:${espressoVersion}",
            espressoIntents: "com.android.support.test.espresso:espresso-intents:${espressoVersion}",
            espressoContrib: "com.android.support.test.espresso:espresso-contrib:${espressoVersion}",
            androidRunner  : "com.android.support.test:runner:${androidSupportRunnerVersion}",
            androidRules   : "com.android.support.test:runner:${androidSupportRunnerVersion}"
    ]

    firebaseDependencies = [
            daggerCompiler    : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger            : "com.google.dagger:dagger:${daggerVersion}",
            gson              : "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin          : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}",
            kotlinLogging     : "io.github.microutils:kotlin-logging:${kotlinLoggingVersion}",
            javaxAnnotation   : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject       : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            roomRuntime       : "android.arch.persistence.room:runtime:${roomVersion}",
            roomCompiler      : "android.arch.persistence.room:compiler:${roomVersion}",
            roomRxJava        : "android.arch.persistence.room:rxjava2:${roomVersion}",
            jodaTime          : "joda-time:joda-time:${jodaTimeVersion}",
            firebaseDatabase  : "com.google.firebase:firebase-database:${firebaseDatabaseVersion}",
            firebaseStorage   : "com.google.firebase:firebase-storage:${firebaseDatabaseVersion}",

    ]

    firebaseTestDependencies = [
            junit        : "junit:junit:${jUnitVersion}",
            kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj      : "org.assertj:assertj-core:${assertJVersion}",
            mockito      : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric  : "org.robolectric:robolectric:${robolectricVersion}",
            roomTesting  : "android.arch.persistence.room:testing:${roomVersion}",
            archTesting  : "android.arch.core:core-testing:${roomVersion}",
            supportRunner: "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules : "com.android.support.test:rules:${androidSupportRulesVersion}"
    ]
}